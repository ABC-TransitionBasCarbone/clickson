model Comments {
  id                         String                        @id @default(uuid()) @db.Uuid
  idEmissionSubCategory      String                        @map("id_emission_sub_category") @db.Uuid
  comment                    String
  createdAt                  DateTime                      @default(now()) @map("created_at")
  emailCreatedBy             String?                       @map("email_created_by")
  sessionEmissionSubCategory SessionEmissionSubCategories? @relation(fields: [idEmissionSubCategory], references: [id])

  @@map("comments")
}

model SessionEmissionCategories {
  id                           String                         @id @default(uuid()) @db.Uuid
  idSessionStudent             String                         @map("id_session_student") @db.Uuid
  idEmissionCategory           Int                            @map("id_emission_category")
  locked                       Boolean                        @default(false)
  emissionCategory             EmissionCategories             @relation(fields: [idEmissionCategory], references: [id], onDelete: Cascade)
  sessionStudent               SessionStudents                @relation(fields: [idSessionStudent], references: [id], onDelete: Cascade)
  sessionEmissionSubCategories SessionEmissionSubCategories[]
  createdAt                    DateTime                       @default(now()) @map("created_at")
  updatedAt                    DateTime                       @updatedAt @map("updated_at")

  @@map("session_emission_categories")
}

model SessionEmissionSubCategories {
  id                        String                    @id @default(uuid()) @db.Uuid
  idSessionEmissionCategory String                    @map("id_session_emission_category") @db.Uuid
  idEmissionSubCategory     Int                       @map("id_emission_sub_category")
  comments                  Comments[]
  sessionEmissionCategories SessionEmissionCategories @relation(fields: [idSessionEmissionCategory], references: [id], onDelete: Cascade)
  emissionSubCategory       EmissionSubCategories     @relation(fields: [idEmissionSubCategory], references: [id], onDelete: Cascade)
  sessionEmissions          SessionEmissions[]
  createdAt                 DateTime                  @default(now()) @map("created_at")
  updatedAt                 DateTime                  @updatedAt @map("updated_at")

  @@map("session_emission_sub_categories")
}

model SessionEmissions {
  id                           String                        @id @default(uuid()) @db.Uuid
  idSessionEmissionSubCategory String                        @map("id_session_emission_sub_category") @db.Uuid
  idEmissionFactor             Int                           @map("id_emission_factor")
  value                        Decimal                       @db.Decimal
  total                        Decimal                       @db.Decimal
  uncertainty                  Decimal                       @default(0) @db.Decimal
  label                        String
  type                         String
  unit                         String
  createdAt                    DateTime                      @default(now()) @map("created_at")
  updatedAt                    DateTime                      @updatedAt @map("updated_at")
  emissionFactor               EmissionFactors?              @relation(fields: [idEmissionFactor], references: [id], onDelete: Cascade)
  sessionEmissionSubCategory   SessionEmissionSubCategories? @relation(fields: [idSessionEmissionSubCategory], references: [id], onDelete: Cascade)

  @@map("session_emissions")
}

model SessionStudents {
  id                        String                      @id @default(uuid()) @db.Uuid
  idSchool                  String                      @map("id_school") @db.Uuid
  name                      String                      @db.VarChar(255)
  year                      Int                         @default(dbgenerated("date_part('year'::text, CURRENT_DATE)"))
  progress                  Int                         @default(0)
  archived                  Boolean                     @default(false)
  deleted                   Boolean                     @default(false)
  locked                    Boolean                     @default(false)
  createdAt                 DateTime                    @default(now()) @map("created_at")
  updatedAt                 DateTime                    @updatedAt @map("updated_at")
  school                    Schools?                    @relation(fields: [idSchool], references: [id])
  groups                    Groups[]
  sessionEmissionCategories SessionEmissionCategories[]

  @@map("session_students")
}
